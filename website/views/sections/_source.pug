section( id='source' class='container content-section text-center' )
  div( class='row' )
    div( class='col-lg-8 col-lg-offset-2' )
      h2=t('section.code.h2')
      
      h3=t('section.code.h3')
      
      p=t('section.code.p1')
      
      pre.
        function init() {
          renderer = new ROOSTR.Renderer('canvas');
          scene = new ROOSTR.Scene(renderer.getContext());
          
          mesh = new ROOSTR.Mesh( new ROOSTR.Cube(), renderer.getContext() );
          var material = new ROOSTR.Material();
          //compile shader
          mesh.addProgram(  assetsLoader.getAsset('flat-shading_vert.glsl').asset.response,
                            assetsLoader.getAsset('flat-shading_frag.glsl').asset.response,
                            material
                          );
          
          scene.addMesh(mesh);
          
          camera = new ROOSTR.PerspectiveCamera( 45, 0.1, 1000, renderer.getContext() );
          camera.setPosition(0.0,0.0,12.0);
      
          render(0);
        }
      
      p=t('section.code.p2')
      
      pre.
        function animate(){
          renderer.clearFrame();
          render(animation.getTotal());
          animation.requestNewFrame();
        }
        
        function render(time){
          var rot = rotationSpeed * time;
          mesh.modelMatrix.rotateX(rot);
          mesh.rotationMatrix.rotateY(rot);
          mesh.modelMatrix.multiply(mesh.rotationMatrix);
          mesh.rotationMatrix.rotateZ(rot);
          mesh.modelMatrix.multiply(mesh.rotationMatrix);
          scene.render(camera,time);
        }
